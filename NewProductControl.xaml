<UserControl x:Class="PanelNikeStore.NewProductControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PanelNikeStore"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1200"
             Background="{DynamicResource WindowBackground}">

    <UserControl.Resources>
        <!-- Styles communs -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,5,0,15"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,5,0,15"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="ModernTextArea" TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}">
            <Setter Property="Height" Value="120"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        </Style>
        <!-- Style pour le bouton "Toutes les variantes" -->
        <Style x:Key="AllVariantsButton" TargetType="Button">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="Background" Value="{DynamicResource ContentBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MenuHover}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="15,0"/>
            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MenuHover}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MenuHover}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Nouveau style pour les boutons de filtrage -->
        <!-- Style pour les boutons de filtrage -->
        <Style x:Key="FilterButton" TargetType="ToggleButton">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="Margin" Value="3,0"/>
            <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MenuHover}" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccentBrush}" TargetName="border"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LabelText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Foreground" Value="{DynamicResource SecondaryText}"/>
        </Style>

        <Style x:Key="SectionTitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,20,0,15"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"/>
        </Style>

        <!-- Style pour les cartes d'images -->
        <Style x:Key="ImageCard" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource ContentBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Margin" Value="0,0,15,15"/>
            <Setter Property="Width" Value="180"/>
            <Setter Property="Height" Value="180"/>
        </Style>

        <!-- Style pour les badges "Image principale" -->
        <Style x:Key="MainImageBadge" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="8,8,0,0"/>
        </Style>

        <!-- Convertisseur pour la visibilité -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid Margin="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel>
                <!-- En-tête -->
                <TextBlock Text="Ajouter un nouveau produit" FontSize="24" FontWeight="Bold" Margin="0,0,0,20" Foreground="{DynamicResource PrimaryText}"/>

                <!-- Message d'état/erreur -->
                <Border x:Name="StatusMessage" Background="#f1f8e9" BorderBrush="#c5e1a5" BorderThickness="1" CornerRadius="4" Padding="15" Margin="0,0,0,20" Visibility="Collapsed">
                    <TextBlock x:Name="StatusMessageText" Text="Produit ajouté avec succès!" Foreground="#558b2f"/>
                </Border>

                <!-- Informations de base -->
                <TextBlock Text="Informations générales" Style="{StaticResource SectionTitle}"/>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Colonne gauche -->
                    <StackPanel Grid.Column="0" Margin="0,0,10,0">
                        <TextBlock Text="Nom du produit" Style="{StaticResource LabelText}"/>
                        <TextBox x:Name="txtProductName" Style="{StaticResource ModernTextBox}"/>

                        <TextBlock Text="Type de produit" Style="{StaticResource LabelText}"/>
                        <ComboBox x:Name="cmbProductType" Style="{StaticResource ModernComboBox}">
                            <ComboBoxItem Content="Lifestyle" Foreground="{DynamicResource PrimaryText}"/>
                            <ComboBoxItem Content="Running" Foreground="{DynamicResource PrimaryText}"/>
                            <ComboBoxItem Content="Jordan" Foreground="{DynamicResource PrimaryText}"/>
                            <ComboBoxItem Content="Basketball" Foreground="{DynamicResource PrimaryText}"/>
                            <ComboBoxItem Content="Football" Foreground="{DynamicResource PrimaryText}"/>
                            <ComboBoxItem Content="Marche à pied" Foreground="{DynamicResource PrimaryText}"/>
                        </ComboBox>

                        <TextBlock Text="Prix (€)" Style="{StaticResource LabelText}"/>
                        <TextBox x:Name="txtPrice" Style="{StaticResource ModernTextBox}" PreviewTextInput="TxtPrice_PreviewTextInput"/>
                    </StackPanel>

                    <!-- Colonne droite -->
                    <StackPanel Grid.Column="1" Margin="10,0,0,0">
                        <TextBlock Text="Genre" Style="{StaticResource LabelText}"/>
                        <ComboBox x:Name="cmbGender" Style="{StaticResource ModernComboBox}">
                            <ComboBoxItem Content="Homme" IsSelected="True" Foreground="{DynamicResource PrimaryText}"/>
                            <ComboBoxItem Content="Femme" Foreground="{DynamicResource PrimaryText}"/>
                        </ComboBox>

                        <TextBlock Text="Description" Style="{StaticResource LabelText}"/>
                        <TextBox x:Name="txtDescription" Style="{StaticResource ModernTextArea}"/>
                    </StackPanel>
                </Grid>

                <!-- Variantes de produit -->
                <TextBlock Text="Variantes du produit" Style="{StaticResource SectionTitle}"/>

                <CheckBox x:Name="chkHasVariants" Content="Ce produit a plusieurs couleurs ou variantes" 
                          Margin="0,0,0,15" Checked="ChkHasVariants_CheckedChanged" Unchecked="ChkHasVariants_CheckedChanged"
                          Foreground="{DynamicResource PrimaryText}"/>

                <!-- Panneau de variantes - visible uniquement si chkHasVariants est coché -->
                <StackPanel x:Name="variantsPanel" Visibility="Collapsed">
                    <Border Background="{DynamicResource ControlBackground}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4" Padding="15" Margin="0,0,0,15">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Variantes disponibles" FontWeight="SemiBold" FontSize="16" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryText}"/>
                                <Button Content="Ajouter une variante" Grid.Column="1" Style="{StaticResource SecondaryButton}" Click="BtnAddVariant_Click"/>
                            </Grid>

                            <!-- Liste des variantes -->
                            <ItemsControl x:Name="variantList" Margin="0,15,0,0">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border Background="{DynamicResource ContentBackground}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4" Padding="15" Margin="0,0,0,10">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <RadioButton IsChecked="{Binding IsMain}" VerticalAlignment="Center" Content="Principale" Margin="0,0,15,0"
                                                             Checked="VariantMainRadioButton_Checked" Tag="{Binding Id}" Foreground="{DynamicResource PrimaryText}"/>

                                                <TextBlock Text="{Binding Color}" Grid.Column="1" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryText}"/>

                                                <Button Content="Supprimer" Grid.Column="3" Style="{StaticResource SecondaryButton}" Background="#ffebee" 
                                                        Foreground="#c62828" Click="BtnRemoveVariant_Click" Tag="{Binding Id}"/>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Border>
                </StackPanel>

                <!-- Images du produit -->
                <TextBlock Text="Images du produit" Style="{StaticResource SectionTitle}"/>

                <Border Background="{DynamicResource ControlBackground}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4" Padding="15" Margin="0,0,0,15">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Images du produit (minimum 2 images)" FontWeight="SemiBold" FontSize="16" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryText}"/>
                            <Button Content="Ajouter une image" Grid.Column="1" Style="{StaticResource SecondaryButton}" Click="BtnAddImage_Click"/>
                        </Grid>

                        <!-- Filtrage et réutilisation d'images - REMPLACER LE COMBOBOX PAR DES BOUTONS DE FILTRAGE -->
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,10">
                            <TextBlock Text="Filtrer par variante:" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="{DynamicResource PrimaryText}"/>

                            <!-- Nouveau conteneur de boutons de filtrage -->
                            <WrapPanel x:Name="filterButtonsPanel" Margin="0,0,10,0">
                                <!-- Bouton "Toutes les variantes" ajouté par défaut -->
                                <ToggleButton x:Name="btnFilterAll" Content="Toutes les variantes" 
                                             Style="{StaticResource FilterButton}" 
                                             IsChecked="True" 
                                             Tag="-1"
                                             Click="BtnFilter_Click"/>
                                <!-- Les autres boutons seront ajoutés dynamiquement ici -->
                            </WrapPanel>

                            <Button Content="Réutiliser une image" Style="{StaticResource SecondaryButton}" 
                                    Margin="20,0,0,0" Click="BtnReuseImage_Click"/>
                        </StackPanel>

                        <!-- Affichage des images -->
                        <TextBlock Text="Sélectionnez l'image principale en cliquant sur le bouton 'Définir comme principale'" 
                                   Margin="0,15,0,10" Foreground="{DynamicResource SecondaryText}"/>

                        <WrapPanel x:Name="imagesPanel" Margin="0,10,0,0">
                            <!-- Les cartes d'images seront ajoutées dynamiquement ici -->
                        </WrapPanel>

                        <!-- Message d'erreur pour les images -->
                        <TextBlock x:Name="txtImageError" Text="Veuillez ajouter au moins 2 images et définir une image principale." 
                                   Foreground="#c62828" Margin="0,10,0,0" Visibility="Collapsed"/>
                    </StackPanel>
                </Border>

                <!-- Boutons d'action -->
                <Grid Margin="0,20,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button Content="Réinitialiser" Grid.Column="1" Style="{StaticResource SecondaryButton}" Width="150" Margin="0,0,10,0" Click="BtnReset_Click"/>
                    <Button Content="Ajouter le produit" Grid.Column="2" Style="{StaticResource ModernButton}" Width="200" Click="BtnAddProduct_Click"/>
                </Grid>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</UserControl>